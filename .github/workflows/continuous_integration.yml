name: Continuous Integration

on: [push, pull_request]

jobs:
  build:
    name: "Visual Studio ${{ matrix.config.platform }} ${{ matrix.config.configuration }}"
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            configuration: "Debug",
            platform: "x64"
          }
        - {
            configuration: "Release",
            platform: "x64"
          }
        - {
            configuration: "Debug",
            platform: "x86"
          }
        - {
            configuration: "Release",
            platform: "x86"
          }

    steps:
    - uses: actions/checkout@v1

    # - name: Build
    #   run: |
    #     $vswhere = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe"
    #     $msbuild = & "$vswhere" -latest -requires Microsoft.Component.MSBuild -find MSBuild\**\Bin\MSBuild.exe | select-object -first 1
    #     $options = @( `
    #       '-p:Configuration=${{ matrix.config.configuration }}', `
    #       '-p:Platform=${{ matrix.config.platform }}', `
    #       '-p:WindowsTargetPlatformVersion=10.0', `
    #       '-p:PlatformToolset=v142', `
    #       '-m', `
    #       '-v:minimal' `
    #     )
    #     & $msbuild Builder.sln $options
    #     & $msbuild Source\Tools\Updater\Updater.csproj $options

    - name: Test
      run: |
        $files = @( `
          'Build\Builder.exe', `
          'Build\BuilderNative.dll', `
          'Build\Plugins\AutomapMode.dll', `
          'Build\Plugins\BuilderEffects.dll', `
          'Build\Plugins\BuilderModes.dll', `
          'Build\Plugins\ColorPicker.dll', `
          'Build\Plugins\CommentsPanel.dll', `
          'Build\Plugins\NodesViewer.dll', `
          'Build\Plugins\SoundPropagationMode.dll', `
          'Build\Plugins\StairSectorBuilder.dll', `
          'Build\Plugins\TagExplorer.dll', `
          'Build\Plugins\TagRange.dll', `
          'Build\Plugins\ThreeDFloorMode.dll', `
          'Source\Plugins\VisplaneExplorer\Resources\vpo.dll', `
          'Build\Plugins\VisplaneExplorer.dll', `
          'Build\Updater.exe' `
        )
        foreach($file in $files)
        {
          if (!(Test-Path -Path $file -PathType Leaf))
          {
            Write-Error File $file is missing
            exit 1
          }
        }

    - name: Prepare Package
      run: |
        Remove-Item Build\Setup -recurse

    - name: Upload Package
      uses: actions/upload-artifact@v1
      with:
        path: Build
        name: "vs_${{ matrix.config.platform }}_${{ matrix.config.configuration }}"
